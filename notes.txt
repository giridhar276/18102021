objects
-----------
Every thing in Python is Object
****** Every object contains set of methods **********


number :
-------
number can be integer or decimal or octal or hexa.

val = 10


string
------
string is sequence of characters.
string can be defined in single quotes or double or triple quotes.

name = 'python programming'
aname = "python programming"
bname = """java programming"""


list ( array in C )
-------------------
list contains set of elements.
Elements can be set of numbers or strings or any combination.
list elements are defined in []


alist = [10,20,30,40]
blist = ["python","java","oracle"]
clist = [5,4.56,"ruby","ML"]


tuple   ( READ ONLY )( IMMUTABLE)( UNCHANGABLE) 
--------
tuple contains set of elements.
Elements can be set of numbers or strings or any combination.
tuple elements are defined in ().
***** ELEMENTS INSIDE THE TUPLE CANNOT BE MODIFIED/changed directly ******


atup = (45,43,439)



dictionary
------------
dictionary contains elements in key:value pairs
dictionary elements are defined in {} .
In dictionary , keys are always UNIQUE
                values can be integer string or list or tuple or dictionary or dictionary of dictionaries

syntax  :   object = {key:value  , key:value , key:value }
example :    book  = {"chap1":10 , "chap2":20 ,"chap3":30 }


set
----
set is UNORDERED collection of UNIQUE elements of SAME type.

aset = {10,10,20,20,20,20,30}







methods & functions
-------------------


methods:
---------
methods are object specific.
Every object has its own methods.
methods are accessed with . symbol.



functions    (   dir(__builtins__) )
---------
builtin functions
user defined functions



functions are common for all the objects.
--------------------------------------
print()
len()
range()
help()
type()
isinstance()
input()       ( In python2.x  raw_input()   )
max()
min()
sum()




list()
tuple()
str()
int()
float()
oct()
hex()
set()
dict()


operators
------------


arithmetic opreators
---------------------
+ - * % /

logical operators
--------------------
and
or
not

name = "python"
if name.isupper()  and len(name) == 10 :
    # your logic

if name.islower() or len(name) == 6 :
    # your logic

relational operators
--------------------
< <= > >= == !=

val = 10
if val < 10  :


assignment operators ( ++ and -- are NOT allowed in python )
---------------------
=  += -= 

val = 10
val = val + 1   (or) val+=1
val = val - 1   (or) val-=1
val = val * 1   (or) val*=1


special operators
--------------------

+
*


boolean
True    1
False   0










file handling
-------------

- flat files  ( .csv txt conf log prop ... )
- third party files ( xlsx pdf mp4 ... )


reading the file
--------------


syntax:    object = open(filename,mode)
exampe :    fr  = open("customers.txt","r")
            fw  = open("customers.txt","w")
            fa  = open("customers.txt","a") 


closing the file
------------------
fr.close()






errors
-------

syntax error
semantic error or runtime error or logical error


Handling the exception in the runtime is known as exception exception.

try
except
else
finally




  C          python       perl        generic
function | definition | subroutine |  block 
--------------------------------------------
- we define function for reusablity purpose.
- Instead of duplicating the code ,  we create one user defined function and call that for mutiple times.


different ways of passing parameters
-------------------------------------

fixed arguments
default arguments
keyword arguments
variable length arguments




import csv
import json
import sys

importing libraries
--------------------
import math
print(math.tan(2))


importing library with alias name
-------------------------------
import math as m
print(m.tan(2))
print(m.floor(34.4))

importing required methods ONLY   ( . is not required )
------------------------------
from math import floor,ceil,sin

print(floor(45.4))
print(sin(1))

importing all the methods
------------------------
from math import *
print(floor(34.3))



from math import 
 (
     floor  as _floor,
     ceil  as _ceil,
     sin  as _ceil
  )

print(_floor(45.4))
print(_sin(1))














8000+  builtin libraries
250000+ third party library

builtin libraries
-----------------------

os            : os.listdir() os.remove() 
sys           : system config information   sys.exit(0)
urllib.request: working with http
math          : mathematical operations
random        : random numbers
calendar
smtplib       : sending mails
ftplib        : ftp'ng the file
telnetlib     :
logging       : logging all the events
shutil        : copy,move,rmtree ....
filecmp       : comparing directories
zipfile       : create/extract the zip files
rarfile       : create/extract the tar files
tarfile       : create/extract the tarfiles
getpass       : shadowing the password
json          : reading/writing json files
csv           : reading/writing csv files
xml        
sysconfig     : system configuration
collections   : working with dictionaries
argparse      : passing args from command line
optparse      : passing args from command line
time          : working with date and time
datetime      : working with date and time
cryptography  : encrypting and decrypting the passwords  
heapq         : performing array operations
gzip          : reading gunzip files
re            : validating the strings
ipadresss     : validting ip address
platform      : display platform information
pathlib       : creating temp files
threading     : for performing multi threading
multiprocessing:
subprocess    : invoking the system commands ( linux or dos commands)



frequently used third party libraries
---------------------------------------
database related
----------------
pymysql   :  mysql
cx_Oracle :  Oracle
pymongo   :  MOngoDBB
pymssql   : sql server


web frameworks ( developing web applications)
--------------
django
flask
bottom

analytics/machine learning
---------------------------
numpy
scipy
pandas
seaborn
plotly
ggplot
matplotlib   : visualizing data .. bar graph.. pie graph
scikit-learn :  machine learning algorithms

image processing
---------------
pillow
opencv

APIs ( REST API) ( web services )   ( SOAP services   REST APIs)
-----
urllib
requests

excel programming
------------------
openpyxl    : reading/write excel files
xlsxwriter  : writing to excel file
pyexcel
xlrd
python-docx : working with ms-word

networking
-----------
paramiko   :  interacting with remote servers
netmiko    :  connecting to router/switch
pyping     :  ping any host or ip address



web scrapping
--------------
beautifulsoup
scrapy

























































































































































































